// <auto-generated />
using System;
using IAMUAYTHAI.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IAMUAYTHAI.Infra.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IAMUAYTHAI.Domain.Aggregates.CheckinAggregate.Checkin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DateTime")
                        .HasDatabaseName("IX_Checkin_DateTime");

                    b.HasIndex("StudentId")
                        .HasDatabaseName("IX_Checkin_StudentId");

                    b.HasIndex("StudentId", "DateTime")
                        .HasDatabaseName("IX_Checkin_StudentId_DateTime");

                    b.ToTable("Checkins");
                });

            modelBuilder.Entity("IAMUAYTHAI.Domain.Aggregates.ClassAggregate.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("IAMUAYTHAI.Domain.Aggregates.EvolutionAggregate.Evolution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CurrentLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("EligibleForNextLevel")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NextKruangExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NextLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentLevel")
                        .HasDatabaseName("IX_Evolution_CurrentLevel");

                    b.HasIndex("NextKruangExpectedDate")
                        .HasDatabaseName("IX_Evolution_NextKruangExpectedDate");

                    b.HasIndex("StudentId")
                        .IsUnique()
                        .HasDatabaseName("IX_Evolution_StudentId_Unique");

                    b.ToTable("Evolutions");
                });

            modelBuilder.Entity("IAMUAYTHAI.Domain.Aggregates.ScheduleAggregate.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DateTime")
                        .HasDatabaseName("IX_Schedule_DateTime");

                    b.HasIndex("TeacherId")
                        .HasDatabaseName("IX_Schedule_TeacherId");

                    b.HasIndex("TeacherId", "DateTime")
                        .HasDatabaseName("IX_Schedule_TeacherId_DateTime");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("IAMUAYTHAI.Domain.Aggregates.StudentClassAggregate.StudentClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("Justification")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<bool>("WasPresent")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId", "ClassId")
                        .IsUnique()
                        .HasDatabaseName("IX_StudentClass_Student_Class");

                    b.ToTable("StudentClasses");
                });

            modelBuilder.Entity("IAMUAYTHAI.Domain.Aggregates.UserAggregate.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Profile")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Teacher_Email");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("IAMUAYTHAI.Domain.Aggregates.StudentAggregate.Student", b =>
                {
                    b.HasBaseType("IAMUAYTHAI.Domain.Aggregates.UserAggregate.User");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.HasIndex("BirthDate")
                        .HasDatabaseName("IX_Student_BirthDate");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("IAMUAYTHAI.Domain.Aggregates.TeacherAggregate.Teacher", b =>
                {
                    b.HasBaseType("IAMUAYTHAI.Domain.Aggregates.UserAggregate.User");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_Teacher_Name");

                    b.HasDiscriminator().HasValue("Teacher");
                });

            modelBuilder.Entity("IAMUAYTHAI.Domain.Aggregates.CheckinAggregate.Checkin", b =>
                {
                    b.HasOne("IAMUAYTHAI.Domain.Aggregates.StudentAggregate.Student", null)
                        .WithMany("Checkins")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IAMUAYTHAI.Domain.Aggregates.ClassAggregate.Class", b =>
                {
                    b.HasOne("IAMUAYTHAI.Domain.Aggregates.TeacherAggregate.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("IAMUAYTHAI.Domain.Aggregates.EvolutionAggregate.Evolution", b =>
                {
                    b.HasOne("IAMUAYTHAI.Domain.Aggregates.StudentAggregate.Student", null)
                        .WithOne("CurrentEvolution")
                        .HasForeignKey("IAMUAYTHAI.Domain.Aggregates.EvolutionAggregate.Evolution", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IAMUAYTHAI.Domain.Aggregates.ScheduleAggregate.Schedule", b =>
                {
                    b.HasOne("IAMUAYTHAI.Domain.Aggregates.TeacherAggregate.Teacher", null)
                        .WithMany("Schedules")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IAMUAYTHAI.Domain.Aggregates.StudentClassAggregate.StudentClass", b =>
                {
                    b.HasOne("IAMUAYTHAI.Domain.Aggregates.ClassAggregate.Class", "Class")
                        .WithMany("StudentClasses")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IAMUAYTHAI.Domain.Aggregates.StudentAggregate.Student", "Student")
                        .WithMany("StudentClasses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("IAMUAYTHAI.Domain.Aggregates.ClassAggregate.Class", b =>
                {
                    b.Navigation("StudentClasses");
                });

            modelBuilder.Entity("IAMUAYTHAI.Domain.Aggregates.StudentAggregate.Student", b =>
                {
                    b.Navigation("Checkins");

                    b.Navigation("CurrentEvolution");

                    b.Navigation("StudentClasses");
                });

            modelBuilder.Entity("IAMUAYTHAI.Domain.Aggregates.TeacherAggregate.Teacher", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
